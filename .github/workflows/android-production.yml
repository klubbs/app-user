name: Production - ANDROID

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Build(B) or Pusblish(P)'
        required: true
        default: ''
jobs:
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:

      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Configure Expo credentials
        uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download S3 files to prepare app
        run: |
          aws s3 cp s3://credentials-apple/ios-google-service-info.plist ios-google-service-info.plist

      - name: Download Yarn dependencies
        run: |
            ls
            npm install --global yarn
            yarn

      - if: github.event.inputs.deploy == 'P'
        name: Publish Version
        env:
          ENVIRONMENT_API_URL: ${{ secrets.ENVIRONMENT_API_URL }}
        run: |
            echo "Publicar versÃ£o canal -> production-${GITHUB_REF##*/}"
            expo publish --release-channel production-${GITHUB_REF##*/} --non-interactive

      - name: Install FastLane
        id: random-color-generator
        run: sudo gem install fastlane -NV

      - name: Download S3 file to publish in Apple Store
        run: |
          aws s3 cp s3://klubbs-devops/android/pc-api-4645832410875810463-754-d807856b6c63.json google-key-account.json

      - if: github.event.inputs.deploy == 'B'
        name: Build Version
        env:
          ENVIRONMENT_API_URL: ${{ secrets.ENVIRONMENT_API_URL }}
        run: |
            echo "----- BUILD -----"
            expo build:android -t app-bundle  --release-channel production-${GITHUB_REF##*/} --non-interactive

            # echo "----- DOWNLOAD IPA -----"
            # curl -o app.apk "$(expo url:apk --non-interactive)"

            echo "----- PLAY STORE ----- "
            expo upload:android --url "$(expo url:apk --non-interactive)" --type aab --key ./google-key-account.json --verbose