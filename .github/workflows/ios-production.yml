name: Production - IOS

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Build(B) or Pusblish(P)'
        required: true
        default: ''
jobs:
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:

      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Configure Expo credentials
        uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # - name: Download S3 files to prepare app
      #   run: |
      #     aws s3 cp s3://credentials-apple/ios-google-service-info.plist ios-google-service-info.plist

      - name: Download Yarn dependencies
        run: |
            ls
            npm install --global yarn
            yarn

      - if: github.event.inputs.deploy == 'P'
        name: Publish Version
        env:
          ENVIRONMENT_API_URL: ${{ secrets.ENVIRONMENT_API_URL }}
        run: |
            echo "Publicar versÃ£o canal -> production-${GITHUB_REF##*/}"
            expo publish --release-channel production-${GITHUB_REF##*/} --non-interactive

      - if: github.event.inputs.deploy == 'B'
        name: Build Version
        env:
          ENVIRONMENT_API_URL: ${{ secrets.ENVIRONMENT_API_URL }}
        run: |
            echo "----- BUILD -----"
            expo build:ios --release-channel production-${GITHUB_REF##*/} --non-interactive
            echo "----- DOWNLOAD IPA -----"
            curl -o app.ipa "$(expo url:ipa --non-interactive)"

      - if: github.event.inputs.deploy == 'B'
        name: Upload do artefato
        uses: actions/upload-artifact@v2
        with:
         name: appbuild
         path: ./app.ipa

  Transport_Apple_Store_Connect:
    needs: Build
    runs-on:  macos-latest
    if: github.event.inputs.deploy == 'B'
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: appbuild

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download S3 file to publish in Apple Store
        run: |
          aws s3 cp s3://klubbs-devops/ios/fastlane-key-ios.json fastlane-key-ios.json

      - name: Fastlane - Install
        run: |
          brew install fastlane
          fastlane update_fastlane

      - name: Fastlane - Transport
        run: fastlane deliver --verbose --ipa "app.ipa" --skip_screenshots --skip_metadata --precheck_include_in_app_purchases false --api_key_path ./fastlane-key-ios.json

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: appbuild
